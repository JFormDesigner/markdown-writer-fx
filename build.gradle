version = '0.9'

apply plugin: 'java'
apply plugin: 'java-library-distribution'

repositories {
	jcenter()
	maven { url 'https://jitpack.io' }
}

dependencies {
	// for RichTextFX submodule
    compile group: 'org.reactfx', name: 'reactfx', version: '2.0-M5'
    compile (group: 'org.fxmisc.undo', name: 'undofx', version: '1.2.2') {
        transitive = false
    }

    // use JitPack to reference GitHub repositories that are not released yet: https://jitpack.io/
    compile 'com.github.JFormDesigner:RichTextFX:master'
    compile 'com.github.TomasMikula:Flowless:master-SNAPSHOT'

//	compile (group: 'org.fxmisc.flowless', name: 'flowless', version: '0.5.1') {
//		transitive = false
//	}
    compile group: 'org.fxmisc.wellbehaved', name: 'wellbehavedfx', version: '0.3'

//	compile 'org.fxmisc.richtext:richtextfx:0.7-M3'
	compile 'com.miglayout:miglayout-javafx:5.0'
	compile 'de.jensd:fontawesomefx-fontawesome:4.7.0-5'
	compile 'org.controlsfx:controlsfx:8.40.12'
	compile 'org.fxmisc.cssfx:cssfx:1.0.0'
	compile 'org.apache.commons:commons-lang3:3.5'

	def flexmarkVersion = '0.19.4'
	compile 'com.vladsch.flexmark:flexmark:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-abbreviation:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-anchorlink:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-aside:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-autolink:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-definition:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-footnotes:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-gfm-strikethrough:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-gfm-tables:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-gfm-tasklist:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-toc:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-wikilink:' + flexmarkVersion
	compile 'com.vladsch.flexmark:flexmark-ext-yaml-front-matter:' + flexmarkVersion

	def commonmarkVersion = '0.9.0'
	compile 'com.atlassian.commonmark:commonmark:' + commonmarkVersion
	compile 'com.atlassian.commonmark:commonmark-ext-autolink:' + commonmarkVersion
	compile 'com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:' + commonmarkVersion
	compile 'com.atlassian.commonmark:commonmark-ext-gfm-tables:' + commonmarkVersion
	compile 'com.atlassian.commonmark:commonmark-ext-heading-anchor:' + commonmarkVersion
	compile 'com.atlassian.commonmark:commonmark-ext-ins:' + commonmarkVersion
	compile 'com.atlassian.commonmark:commonmark-ext-yaml-front-matter:' + commonmarkVersion

	testCompile 'junit:junit:4.12'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// for RichTextFX submodule
sourceSets {
	main.java.srcDirs      = ['src/main/java']
	main.resources.srcDirs = ['src/main/resources']
}

jar {
	manifest {
		attributes( 'Main-Class': 'org.markdownwriterfx.MarkdownWriterFXApp',
					'Class-Path': configurations.compile.collect { 'lib/' + it.getName() }.join(' '),
					'Implementation-Version': version
		)
	}
}

distributions {
	main {
		contents {
			from { ['LICENSE', 'README.md', 'CHANGES.md'] }
			into( 'images' ) {
				from { 'images' }
			}
		}
	}
}
//---- eclipse ----------------------------------------------------------------

apply plugin: 'eclipse'

import org.gradle.plugins.ide.eclipse.model.AccessRule

eclipse {
	classpath {
		file {
			whenMerged {
				def jre = entries.find { it.path.contains 'org.eclipse.jdt.launching.JRE_CONTAINER' }

				// make JavaFX API accessible in Eclipse project
				// (when refreshing Gradle project in buildship)
				jre.accessRules.add(new AccessRule('0', 'javafx/**'))
				jre.accessRules.add(new AccessRule('0', 'com/sun/javafx/**'))

				// remove trailing slash from jre path
				if (jre.path.endsWith('/'))
					jre.path = jre.path.substring(0, jre.path.length() - 1)
			}
		}
	}
}
